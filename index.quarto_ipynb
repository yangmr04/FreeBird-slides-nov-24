{
  "cells": [
    {
      "cell_type": "markdown",
      "metadata": {},
      "source": [
        "---\n",
        "title: \"Basic Version Control with `Git`\"\n",
        "author: \"Ray Yang\"\n",
        "format: revealjs\n",
        "---\n",
        "\n",
        "\n",
        "## What is version control\n",
        "\n",
        "Version control (also known as revision control, source control, and source code management) is the software engineering practice of controlling computer files and versions of files; primarily source code text files, but generally any type of file. ^[<https://en.wikipedia.org/wiki/Version_control>]\n",
        "\n",
        ". . .\n",
        "\n",
        "- it's a concept, and `Git` is a software\n",
        "- and [GitHub](https://github.com/) is a platform/host/server...\n",
        "\n",
        "## What is `Git`\n",
        "\n",
        "- it's a software\n",
        "- it's free and open source\n",
        "- it's the  *de facto* standard version control system but there are many more (both open and proprietary)\n",
        "- it's independent of network access or a central server\n",
        "\n",
        "\n",
        "## What is [GitHub](https://github.com/)?\n",
        "\n",
        "- it's a platform/host/server...\n",
        "- it's free but **NOT** open source\n",
        "- it's owned by Microsoft since 2018\n",
        "- there are many others, e.g., [Bitbucket](https://bitbucket.org/product), [GitLab](https://about.gitlab.com)\n",
        "\n",
        "## The components\n",
        "\n",
        "There are the local parts and the server part. Typically, \n",
        "\n",
        "::: {#fig-2}\n",
        "\n",
        "```{dots}\n",
        "digraph {\n",
        "  rankdir=LR;\n",
        "  edge [ style=dashed ];\n",
        "\n",
        "  // node [ fontname=\"Handlee\" ];\n",
        "  subgraph cluster_frontend {\n",
        "    label=\"Your Laptop\";\n",
        "    \"local files\" ->\"staging area\" -> \"local repo\";\n",
        "  }\n",
        "      \n",
        "  subgraph cluster_backend {\n",
        "    \n",
        "    label=\"The Internet (origin/remote)\";\n",
        "    \"online repo\";\n",
        "  }\n",
        "\n",
        "  \"local repo\" -> \"online repo\";\n",
        "  \n",
        "}\n",
        "```\n",
        "\n",
        ":::\n",
        "\n",
        "::: {#fig-simple}\n",
        "\n",
        "```{dot}\n",
        "digraph {\n",
        "  rankdir=LR;\n",
        "  edge [ style=dashed ];\n",
        "\n",
        "  // node [ fontname=\"Handlee\" ];\n",
        "  subgraph cluster_frontend {\n",
        "    label=\"Your Laptop\";\n",
        "    \"local files\" ->\"staging area\" -> \"local repo\";\n",
        "  }\n",
        "      \n",
        "  subgraph cluster_backend {\n",
        "    \n",
        "    label=\"The Internet (origin/remote)\";\n",
        "    \"online repo\";\n",
        "  }\n",
        "\n",
        "  \"local repo\" -> \"online repo\";\n",
        "  \n",
        "}\n",
        "```\n",
        "\n",
        "\n",
        ":::\n",
        "\n",
        "## Some key commands\n",
        "\n",
        "- `git add`: to stage the changes\n",
        "```bash\n",
        "git add <file_name>\n",
        "```\n",
        "several options:\n",
        "```bash\n",
        "git add -A    # stage all changes: new, modified and deleted files\n",
        "git add .     # stage new and modified files\n",
        "git add -u    # stage modified and deleted files\n",
        "```\n",
        "\n",
        "## Some key commands\n",
        "- `git commit`: to commit the changes staged with `git add`\n",
        "```bash\n",
        "git commit -m \"some text for the commit message\"\n",
        "```"
      ],
      "id": "8bd8a7d5"
    }
  ],
  "metadata": {
    "kernelspec": {
      "name": "python3",
      "language": "python",
      "display_name": "Python 3 (ipykernel)",
      "path": "/Users/myang/miniforge3/share/jupyter/kernels/python3"
    }
  },
  "nbformat": 4,
  "nbformat_minor": 5
}